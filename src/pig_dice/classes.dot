digraph "classes" {
rankdir=BT
charset="utf-8"
"computer.Computer" [color="black", fontcolor="black", label=<{Computer|<br ALIGN="LEFT"/>|easy_mode(current_score)<br ALIGN="LEFT"/>hard_mode(current_score)<br ALIGN="LEFT"/>medium_mode(current_score)<br ALIGN="LEFT"/>sleep()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dice.Dice" [color="black", fontcolor="black", label=<{Dice|<br ALIGN="LEFT"/>|display_dice(num)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_display.Display" [color="black", fontcolor="black", label=<{Display|<br ALIGN="LEFT"/>|test_return()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"exception.ExitGameException" [color="black", fontcolor="red", label=<{ExitGameException|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"game.Game" [color="black", fontcolor="black", label=<{Game|cheat : bool<br ALIGN="LEFT"/>computer<br ALIGN="LEFT"/>current_score : int<br ALIGN="LEFT"/>game_played : int<br ALIGN="LEFT"/>index : int<br ALIGN="LEFT"/>player1 : NoneType<br ALIGN="LEFT"/>player2<br ALIGN="LEFT"/>player_list : list<br ALIGN="LEFT"/>take_choice<br ALIGN="LEFT"/>take_choice_name<br ALIGN="LEFT"/>winner : str<br ALIGN="LEFT"/>|change_multiplay_name()<br ALIGN="LEFT"/>change_single_name()<br ALIGN="LEFT"/>computer_game_logic(choice, current_player, num)<br ALIGN="LEFT"/>display()<br ALIGN="LEFT"/>display_dice_current_player(current_player, num)<br ALIGN="LEFT"/>display_multiplay()<br ALIGN="LEFT"/>end_game(player1, player2)<br ALIGN="LEFT"/>invalid_input()<br ALIGN="LEFT"/>multiplay()<br ALIGN="LEFT"/>multiplay_change_name()<br ALIGN="LEFT"/>multiplay_game_logic(num)<br ALIGN="LEFT"/>play()<br ALIGN="LEFT"/>player_change()<br ALIGN="LEFT"/>player_hold(current_player, num)<br ALIGN="LEFT"/>player_holds(current_player, num)<br ALIGN="LEFT"/>player_rolled(current_player, num)<br ALIGN="LEFT"/>roll_dice()<br ALIGN="LEFT"/>rolled_one(current_player)<br ALIGN="LEFT"/>set_current_score_zero()<br ALIGN="LEFT"/>set_player_multi()<br ALIGN="LEFT"/>set_player_single()<br ALIGN="LEFT"/>single_game(mode)<br ALIGN="LEFT"/>single_game_intro(mode)<br ALIGN="LEFT"/>single_game_menu()<br ALIGN="LEFT"/>singleplay_change_name()<br ALIGN="LEFT"/>take_choice()<br ALIGN="LEFT"/>take_choice_menu()<br ALIGN="LEFT"/>take_choice_name()<br ALIGN="LEFT"/>when_num_is_one(current_player)<br ALIGN="LEFT"/>while_num_not_1(current_player, num)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"shell.PigDiceCLI" [color="black", fontcolor="black", label=<{PigDiceCLI|intro : str<br ALIGN="LEFT"/>prompt : str<br ALIGN="LEFT"/>|do_cheat(_)<br ALIGN="LEFT"/>do_clear(_)<br ALIGN="LEFT"/>do_exit(_)<br ALIGN="LEFT"/>do_high_score(_)<br ALIGN="LEFT"/>do_q(_)<br ALIGN="LEFT"/>do_quit(_)<br ALIGN="LEFT"/>do_rules(_)<br ALIGN="LEFT"/>do_score(_)<br ALIGN="LEFT"/>do_start(_)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"player.Player" [color="black", fontcolor="black", label=<{Player|game_won : int<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>num_holds : int<br ALIGN="LEFT"/>num_rolls : int<br ALIGN="LEFT"/>score : int<br ALIGN="LEFT"/>|get_game_won()<br ALIGN="LEFT"/>get_name()<br ALIGN="LEFT"/>get_num_holds()<br ALIGN="LEFT"/>get_num_rolls()<br ALIGN="LEFT"/>get_score()<br ALIGN="LEFT"/>new_game()<br ALIGN="LEFT"/>set_game_won()<br ALIGN="LEFT"/>set_name(name)<br ALIGN="LEFT"/>set_num_holds()<br ALIGN="LEFT"/>set_num_rolls()<br ALIGN="LEFT"/>set_score(num)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"save.Save" [color="black", fontcolor="black", label=<{Save|game_history : list<br ALIGN="LEFT"/>|load(filname)<br ALIGN="LEFT"/>save(player1, player2, played_game, filname)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_save.TestSave" [color="black", fontcolor="black", label=<{TestSave|test_filename : str<br ALIGN="LEFT"/>|setUp()<br ALIGN="LEFT"/>tearDown()<br ALIGN="LEFT"/>test_save()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_computer_class.Test_computer_player_medium" [color="black", fontcolor="black", label=<{Test_computer_player_medium|<br ALIGN="LEFT"/>|test_easy()<br ALIGN="LEFT"/>test_function_return()<br ALIGN="LEFT"/>test_hard_mode()<br ALIGN="LEFT"/>test_instance()<br ALIGN="LEFT"/>test_medium_mode()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_dice.Test_dice" [color="black", fontcolor="black", label=<{Test_dice|<br ALIGN="LEFT"/>|test_dices()<br ALIGN="LEFT"/>test_instance()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_exception.Test_exception" [color="black", fontcolor="black", label=<{Test_exception|<br ALIGN="LEFT"/>|test_exit_game_exception()<br ALIGN="LEFT"/>test_instaance()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_game.Test_game" [color="black", fontcolor="black", label=<{Test_game|<br ALIGN="LEFT"/>|test_change_multiplay_name()<br ALIGN="LEFT"/>test_change_single_name()<br ALIGN="LEFT"/>test_display()<br ALIGN="LEFT"/>test_display_dice_current_player()<br ALIGN="LEFT"/>test_display_multiplay()<br ALIGN="LEFT"/>test_end_game()<br ALIGN="LEFT"/>test_instance()<br ALIGN="LEFT"/>test_player_change()<br ALIGN="LEFT"/>test_player_hold()<br ALIGN="LEFT"/>test_player_rolled()<br ALIGN="LEFT"/>test_roll_dice()<br ALIGN="LEFT"/>test_rolled_one()<br ALIGN="LEFT"/>test_set_current_score_zero()<br ALIGN="LEFT"/>test_set_multiplayer()<br ALIGN="LEFT"/>test_set_player_single()<br ALIGN="LEFT"/>test_single_game_intro()<br ALIGN="LEFT"/>test_single_game_menu()<br ALIGN="LEFT"/>test_take_choice()<br ALIGN="LEFT"/>test_take_choice_menu_valid_input()<br ALIGN="LEFT"/>test_take_choice_name()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_high_score.Test_high_score" [color="black", fontcolor="black", label=<{Test_high_score|<br ALIGN="LEFT"/>|test_calculate_high_score()<br ALIGN="LEFT"/>test_display()<br ALIGN="LEFT"/>test_display_high_score()<br ALIGN="LEFT"/>test_load_file()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"test_player.Test_player" [color="black", fontcolor="black", label=<{Test_player|<br ALIGN="LEFT"/>|test_beginning_score_zero()<br ALIGN="LEFT"/>test_game_won()<br ALIGN="LEFT"/>test_get_name()<br ALIGN="LEFT"/>test_instance()<br ALIGN="LEFT"/>test_new_game()<br ALIGN="LEFT"/>test_set_name()<br ALIGN="LEFT"/>test_set_score()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"computer.Computer" -> "player.Player" [arrowhead="empty", arrowtail="none"];
"computer.Computer" -> "game.Game" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="player2", style="solid"];
"computer.Computer" -> "game.Game" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="computer", style="solid"];
"player.Player" -> "game.Game" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="player1", style="solid"];
}
